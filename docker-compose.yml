version: '3.8'

services:
  # Backend FastAPI service
  backend:
    build:
      context: .
      dockerfile: ./docker/backend.Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./.cache:/app/.cache
    env_file:
      - .env
    networks:
      - spark-pg-network
    depends_on:
      - postgres
      - mysql
      - pyspark

  # Frontend React service
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - spark-pg-network
    depends_on:
      - backend

  # PostgreSQL service
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    networks:
      - spark-pg-network

  # MySQL service
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testdb
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql-init:/docker-entrypoint-initdb.d
    networks:
      - spark-pg-network

  # PySpark service
  pyspark:
    build:
      context: .
      dockerfile: ./docker/pyspark.Dockerfile
    volumes:
      - .:/app
    networks:
      - spark-pg-network
    environment:
      - PYTHONPATH=/app
    # Keep the container running
    command: tail -f /dev/null

networks:
  spark-pg-network:
    driver: bridge

volumes:
  postgres_data:
  mysql_data: 